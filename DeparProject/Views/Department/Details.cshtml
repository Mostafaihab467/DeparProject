@model Department
@{
    ViewBag.Title = "Department Details";
}

<!DOCTYPE html>
<html>
<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .nested-list {
            list-style-type: none;
            padding-left: 20px;
        }

            .nested-list li {
                margin: 5px 0;
            }

            .nested-list .list-group-item {
                border: none;
            }

                .nested-list .list-group-item::before {
                    content: "• ";
                    color: #007bff; /* Bootstrap primary color */
                }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center mb-4">@Model.Name</h2>

        <div class="text-center mb-4">
            <img src="~/@Model.Logo" alt="Logo" class="img-fluid rounded-circle" width="150" height="150" />
        </div>

        <div class="row">
            <div class="col-md-6">
                <h3 class="mb-3">Sub-Departments</h3>
                @if (Model.SubDepartments != null && Model.SubDepartments.Any())
                {
                    @Html.Raw(RenderDepartmentTree(Model))
                }
                else
                {
                    <ul class="list-group">
                        <li class="list-group-item">No sub-departments found.</li>
                    </ul>
                }
                <!-- Add Button to Add Child Department -->
                <div class="mt-3">
                    <a href="@Url.Action("CreateChild", new { parentId = Model.ID })" class="btn btn-success">Add Child Department</a>
                </div>
            </div>
            <div class="col-md-6">
                <h3 class="mb-3">Parent Departments</h3>
                <ul class="list-group">
                    @foreach (var parent in ViewBag.ParentDepartments)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("Details", new { id = parent.ID.ToString() })">@parent.Name</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="text-center mt-4">
            <a href="@Url.Action("Index")" class="btn btn-primary">Back to List</a>

            <!-- Delete Button -->
            @using (Html.BeginForm("Delete", "Department", FormMethod.Post, new { @class = "d-inline" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("id", Model.ID)
                <input type="submit" value="Delete" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this department?');" />
            }
        </div>
    </div>

    @functions {
        private string RenderDepartmentTree(Department department, int level = 0)
        {
            var indent = new string(' ', level * 4);
            var builder = new System.Text.StringBuilder();
            builder.Append($"<ul class=\"list-group nested-list\" style=\"padding-left: {level * 20}px;\">");

            // Render the current department
            var url = Url.Action("Details", "Department", new { id = department.ID.ToString() });
            builder.Append($"<li class=\"list-group-item\">{indent}<a href=\"{url}\">{department.Name}</a>");

            // Render sub-departments recursively
            if (department.SubDepartments != null && department.SubDepartments.Any())
            {
                foreach (var subDepartment in department.SubDepartments)
                {
                    builder.Append(RenderDepartmentTree(subDepartment, level + 1));
                }
            }

            builder.Append("</li></ul>");
            return builder.ToString();
        }
    }
</body>
</html>
